
// Generated by setup_local_network.py
// Tests connectivity to the local backend server

import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Network Test',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const NetworkTestScreen(),
    );
  }
}

class NetworkTestScreen extends StatefulWidget {
  const NetworkTestScreen({Key? key}) : super(key: key);

  @override
  _NetworkTestScreenState createState() => _NetworkTestScreenState();
}

class _NetworkTestScreenState extends State<NetworkTestScreen> {
  String _result = "Press the button to test connection";
  bool _isLoading = false;

  Future<void> _testConnection() async {
    setState(() {
      _isLoading = true;
      _result = "Testing connection to local backend server...";
    });
    
    final url = 'http://192.168.100.6:8000/api/health/';
    print('URL: $url');
    
    try {
      final response = await http.get(Uri.parse(url));
      
      print('Status code: ${response.statusCode}');
      print('Response: ${response.body}');
      
      if (response.statusCode == 200) {
        setState(() {
          _result = "Connection successful!\n\n${response.body}";
        });
      } else {
        setState(() {
          _result = "Connection returned non-200 status code\n\n${response.statusCode}\n${response.body}";
        });
      }
    } catch (e) {
      print('Connection failed: $e');
      setState(() {
        _result = "Connection failed: $e\n\nTroubleshooting tips:\n"
                 "1. Make sure backend server is running\n"
                 "2. Check firewall settings\n"
                 "3. Verify you're on the same network";
      });
    } finally {
      setState(() {
        _isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Backend Connection Test')),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Text(
                'Testing connection to: 192.168.100.6:8000',
                style: const TextStyle(fontSize: 16),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 20),
              ElevatedButton(
                onPressed: _isLoading ? null : _testConnection,
                child: _isLoading
                    ? const CircularProgressIndicator(color: Colors.white)
                    : const Text('Test Connection'),
              ),
              const SizedBox(height: 20),
              Expanded(
                child: Container(
                  padding: const EdgeInsets.all(16),
                  decoration: BoxDecoration(
                    border: Border.all(color: Colors.grey),
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: SingleChildScrollView(
                    child: Text(_result),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
